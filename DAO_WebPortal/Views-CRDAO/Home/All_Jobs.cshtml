@using PagedList.Core.Mvc
@using PagedList.Core
@model StaticPagedList<Helpers.Models.WebsiteViewModels.JobPostViewModel>

@{
    Layout = "../Shared/_MainLayout.cshtml";
}

<style>
.form-check{
    line-height: 24px;
}
.dark-theme .form-check-input{
    background: #3c405c;
}
    </style>
@Html.AntiForgeryToken()

<!-- Row -->
<div class="row">
    <div class="col-md-3">
        <div style="position:fixed">

        <button class="btn btn-primary text-white w-100 mb-2" type="button" onclick="ShowLoader();window.location.href='./New-Job';">
            <i class="fas fa-plus me-1"></i> Post New Job
        </button>

        <div class="card p-3 pt-2">
            <h5 class="mb-3 mt-2"><i class="fas fa-search me-1"></i> Search</h5>
            
             <div class="input-group"  style="height: 30px;">

            <input class="form-control" id="jobQueryFilter" type="text" placeholder="Search job title">
        </div>  
        <div class="input-group mt-3">
                <span class="input-group-text"><i class="fas fa-filter"></i></span>
                <select class="form-select" id="jobStatusSelect">
                    <option value="*" selected>All Jobs</option>
                    <option value="AdminApprovalPending">Admin Approval Pending</option>
                    <option value="DoSFeePending">DoS Fee Pending</option>
                    <option value="KYCPending">KYC Pending</option>
                    <option value="InternalAuction">Internal Auction</option>
                    <option value="PublicAuction">Public Auction</option>
                    <option value="AuctionCompleted">Auction Completed</option>
                    <option value="InformalVoting">Informal Voting</option>
                    <option value="FormalVoting">Formal Voting</option>
                    <option value="Completed">Completed</option>
                    <option value="Failed">Failed</option>
                    <option value="Expired">Expired</option>
                    <option value="Rejected">Rejected</option>
                </select>
        </div>  

        <hr class="mb-4 mt-4">

        <h5><i class="fas fa-code me-1"></i></i> Code Lang.</h5>
        @{
            List<string> tagsList = new List<string>();
        }
        <div style="height:200px;overflow-y:scroll">
            @foreach (var item in Model.Select(x=>x.Tags))
            {
                if(!string.IsNullOrEmpty(item))
                {
                    foreach(var tag in item.Split(","))
                    {
                        if(!tagsList.Contains(tag))
                        {
                        tagsList.Add(tag);
                        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> @tag</div>
                        }

                    }
                }

                
            }
        </div>

        <hr class="mb-4 mt-4">

        <h5><i class="fas fa-wallet me-1"></i></i> Job Budget (€)</h5>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 0 - 1000</div>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 1000 - 5000</div>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 5000 - 25000</div>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 25000 +</div>

        <hr class="mb-4 mt-4">

        <h5><i class="fas fa-star me-1"></i></i> Bids</h5>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 0 - 5</div>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 5 - 10</div>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 10 - 50</div>
        <div class="form-check"><input class="form-check-input" type="checkbox" value=""><label class="form-check-label text-justify"></label> 50 +</div>

    </div>
    </div>
    </div>
    <div class="col-md-9">
        @if (Model.Count() > 0)
        {
            @foreach (var item in Model)
            {
                <div class="card mb-3">
                    <partial name="../Shared/_JobCardPartial.cshtml" model="item" />
                </div>
            }
        }
        else
        {
            <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "Job not found." } }' />
        }
    </div>
</div>

@if (Model.Count() > 0)
{
    @*############ PAGINATION ############*@
    <div class="row">
        <div class="col-md-12">
            <table class="my-3 w-100">
                <tr>
                    <td colspan="3" align="center">
                        <pager class="pager-container" list="@Model" options="@PagedListRenderOptions.Bootstrap4Full" asp-action="All-Jobs" asp-controller="Home" />
                    </td>
                </tr>
            </table>
        </div>
    </div>
}

@section Scripts{

    <script>
        $(document).ready(function () {
            //Check if filter selected
            if (getQueryParameter("status") != null && getQueryParameter("status") != "") {
                $("#jobStatusSelect").val(getQueryParameter("status")).change();

                //Change pagination links according to status filter
                $('.page-link').each(function (i, obj) {
                    $(obj).attr("href", $(obj).attr("href") + "&status=" + getQueryParameter("status"))
                });
            }
                       
            //Check if text filter exists
            if (getQueryParameter("query") != null && getQueryParameter("query") != "") {
                $("#jobQueryFilter").val(getQueryParameter("query"));

                //Change pagination links according to status filter
                $('.page-link').each(function (i, obj) {
                    $(obj).attr("href", $(obj).attr("href") + "&query=" + getQueryParameter("query"))
                });
            }

            //Job status filter event
            $('#jobStatusSelect').on('change', function () {
                window.location.href = "../All-Jobs?status=" + this.value + "&query=" + $("#jobQueryFilter").val();
            });

            //Search filter enter keypress event
            $("#jobQueryFilter").on('keypress',function(e) {
                if(e.which == 13) {
                    window.location.href = "../All-Jobs?query=" + $("#jobQueryFilter").val() + "&status="+ $('#jobStatusSelect').val();
                }
            });

        });
    </script>

}