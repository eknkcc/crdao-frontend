@using DAO_WebPortal.Resources
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

@{
    string theme = httpContextAccessor.HttpContext.Request.Cookies["theme"];
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
    <meta name="author" content="">
    <meta name="description" content="">
    <meta name="keyword" content="">

    <title>DAO WebPortal</title>

    <link rel="apple-touch-icon" sizes="57x57" href="~/Home/favicon/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="~/Home/favicon/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="~/Home/favicon/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="~/Home/favicon/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="~/Home/favicon/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="~/Home/favicon/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="~/Home/favicon/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="~/Home/favicon/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="~/Home/favicon/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="~/Home/favicon/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/Home/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="~/Home/favicon/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/Home/favicon/favicon-16x16.png">
    <link rel="manifest" href="~/Home/favicon/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="~/Home/assets/favicon/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">

    <!-- Main styles for this application-->
    <link href="~/Home/css/style.css?v=1.0.6" rel="stylesheet" />
    <link href="~/Home/css/custom.css?v=1.0.9" rel="stylesheet" />

    <!-- Library styles -->
    <link href="~/Home/lib/chartjs/css/coreui-chartjs.css" rel="stylesheet" />
    <link href="~/Home/lib/toastr/toastr.css" rel="stylesheet" />
    <link href="~/Home/lib/font-awesome/fontawesome-all.min.css" rel="stylesheet" />
    <link href="~/Home/lib/jquery-confirm/jquery-confirm.css" rel="stylesheet" />

</head>

<body class="@theme">

    <div class="sidebar sidebar-dark sidebar-fixed" id="sidebar">
        <div class="sidebar-brand d-none d-md-flex">
            <img src="~/Public/images/crdao-newlogo-light.png" class="sidebar-brand-full" width="150" height="43"
                 alt="Services DAO" />
            <img src="~/Public/images/crdao-newlogo-light.png" class="sidebar-brand-narrow" width="46" height="46"
                 alt="Services DAO" />
        </div>
        <ul class="sidebar-nav" data-coreui="navigation" data-simplebar="">
            <li class="nav-item">
                <a class="nav-link link-load" href="../Home">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-home"></use>
                    </svg> Dashboard
                </a>
            </li>
            <li class="nav-title">MENU</li>

            <li class="nav-item">
                <a class="nav-link link-load" href="../All-Jobs">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-notes"></use>
                    </svg> Forum
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link link-load" href="../My-Jobs">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-library-add"></use>
                    </svg>My Jobs
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link link-load" href="../Auctions">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-auction"></use>
                    </svg> Auctions
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link link-load" href="../My-Bids">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-tag"></use>
                    </svg> My Bids
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link link-load" href="../Votings">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-thumb-up"></use>
                    </svg> Voting
                </a>
            </li>

            @if (Program._settings.DaoBlockchain == null)
            {
                @if (httpContextAccessor.HttpContext.Session.GetString("UserType") ==
               Helpers.Constants.Enums.UserIdentityType.VotingAssociate.ToString() ||
               httpContextAccessor.HttpContext.Session.GetString("UserType") ==
               Helpers.Constants.Enums.UserIdentityType.Admin.ToString())
                {
                    <li class="nav-item">
                        <a class="nav-link link-load" href="../VA-Directory">
                            <svg class="nav-icon">
                                <use xlink:href="/Home/images/svg/free.svg#cil-address-book"></use>
                            </svg> VA Directory
                        </a>
                    </li>
                }
            }

            <li class="nav-item">
                <a class="nav-link link-load" href="../Reputation-History">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-star"></use>
                    </svg> Reputation History
                </a>
            </li>

            @if (httpContextAccessor.HttpContext.Session.GetString("UserType") !=
            Helpers.Constants.Enums.UserIdentityType.Admin.ToString())
            {
                <li class="nav-item">
                    <a class="nav-link link-load" href="../Payment-History">
                        <svg class="nav-icon">
                            <use xlink:href="/Home/images/svg/free.svg#cil-wallet"></use>
                        </svg> Payment History
                    </a>
                </li>
            }

            <li class="nav-item">
                <a class="nav-link link-load" href="../User-Profile">
                    <svg class="nav-icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-user"></use>
                    </svg> User Profile
                </a>
            </li>

            @if (httpContextAccessor.HttpContext.Session.GetString("UserType") == Helpers.Constants.Enums.UserIdentityType.Admin.ToString())
            {
                <li class="nav-title">ADMIN PAGES</li>

                <li class="nav-item">
                    <a class="nav-link link-load" href="../Payment-History-Admin">
                        <svg class="nav-icon">
                            <use xlink:href="/Home/images/svg/free.svg#cil-wallet"></use>
                        </svg> Payment History
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="../Users-List">
                        <svg class="nav-icon">
                            <use xlink:href="/Home/images/svg/free.svg#cil-wc"></use>
                        </svg>Users List
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="../Application-Logs">
                        <svg class="nav-icon">
                            <use xlink:href="/Home/images/svg/free.svg#cil-storage"></use>
                        </svg>Application Logs
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="../Reputation-Logs">
                        <svg class="nav-icon">
                            <use xlink:href="/Home/images/svg/free.svg#cil-calculator"></use>
                        </svg>Reputation Logs
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="../Dao-Variables">
                        <svg class="nav-icon">
                            <use xlink:href="/Home/images/svg/free.svg#cil-settings"></use>
                        </svg>DAO Variables
                    </a>
                </li>
            }


            <li class="nav-item d-block d-sm-none mt-3">
                <center>
                    <nav>
                        @if (httpContextAccessor.HttpContext.Session.GetInt32("ChainSign") < 0 && Program._settings.DaoBlockchain != null)
                        {
                            <div class="btn-group mb-3" role="group">
                                <button type="button" onclick="ConnectWallet(false);" class="btn btn-block btn-md submitFormButton w-100 casperBg me-2 text-white font-sm"><img src="../Public/images/casper.png" style="width: 24px;" class="me-2" />Connect Wallet</button>
                            </div>
                        }

                        <div class="btn-group" role="group">
                            <input class="btn-check" id="btn-light-theme" type="radio" name="theme-switch"
                                   autocomplete="off" value="light-theme" onchange="handleThemeChange(this.value)">
                            <label class="btn btn-primary" for="btn-light-theme">
                                <svg class="icon">
                                    <use xlink:href="/Home/images/svg/free.svg#cil-sun"></use>
                                </svg>
                            </label>
                            <input class="btn-check" id="btn-dark-theme" type="radio" name="theme-switch"
                                   autocomplete="off" value="dark-theme" onchange="handleThemeChange(this.value)">
                            <label class="btn btn-primary" for="btn-dark-theme">
                                <svg class="icon">
                                    <use xlink:href="/Home/images/svg/free.svg#cil-moon"></use>
                                </svg>
                            </label>
                        </div>
                    </nav>
                </center>
            </li>
        </ul>
    </div>

    <div class="wrapper d-flex flex-column min-vh-100 bg-light dark:bg-transparent">
        <header class="header header-sticky mb-4">
            <div class="container-fluid">
                <button class="header-toggler px-md-0 me-md-3" type="button"
                        onclick="coreui.Sidebar.getInstance(document.querySelector('#sidebar')).toggle()">
                    <svg class="icon icon-lg">
                        <use xlink:href="/Home/images/svg/free.svg#cil-menu"></use>
                    </svg>
                </button>
                <h4 class="d-none d-md-block">@ViewBag.Title</h4>
                <nav class="header-nav ms-auto me-4 d-none d-sm-block">
                    @if (httpContextAccessor.HttpContext.Session.GetInt32("ChainSign") < 0 && Program._settings.DaoBlockchain != null)
                    {
                        <div class="btn-group" role="group">
                            <button type="button" onclick="ConnectWallet(false);"
                                class="btn btn-block btn-md submitFormButton w-100 casperBg me-2 text-white font-sm">
                                <img src="../Public/images/casper.png" style="width: 24px;" class="me-2" />Connect
                                Wallet
                            </button>
                        </div>
                    }

                    <div class="btn-group" role="group">
                        <input class="btn-check" id="btn-light-theme" type="radio" name="theme-switch"
                               autocomplete="off" value="light-theme" onchange="handleThemeChange(this.value)">
                        <label class="btn btn-primary" for="btn-light-theme">
                            <svg class="icon">
                                <use xlink:href="/Home/images/svg/free.svg#cil-sun"></use>
                            </svg>
                        </label>
                        <input class="btn-check" id="btn-dark-theme" type="radio" name="theme-switch" autocomplete="off"
                               value="dark-theme" onchange="handleThemeChange(this.value)">
                        <label class="btn btn-primary" for="btn-dark-theme">
                            <svg class="icon">
                                <use xlink:href="/Home/images/svg/free.svg#cil-moon"></use>
                            </svg>
                        </label>
                    </div>
                </nav>

                <ul class="header-nav">
                    <li class="nav-item dropdown d-md-down-none">
                        <div class="top-menu-item" data-coreui-toggle="dropdown" href="#" role="button" aria-haspopup="true"
                             aria-expanded="false">
                            <div class="avatar avatar-md d-inline-block" style="vertical-align:top">
                                <img class="avatar-img" src="@Url.Action("GetProfileImage", "Home")">
                            </div>
                            <div class="d-inline-block">
                                <small class="mb-0">@httpContextAccessor.HttpContext.Session.GetString("NameSurname")</small><br />
                                <small><b>@httpContextAccessor.HttpContext.Session.GetString("UserType")</b></small>
                            </div>
                            @if (httpContextAccessor.HttpContext.Session.GetInt32("ChainSign") > 0 && Program._settings.DaoBlockchain != null)
                            {
                                <div class="d-inline-block reputationHeaderDiv">
                                    <small class="mb-0">
                                        <i class="fas fa-star me-1"></i><small>Rep: </small> <span class="text-right">@httpContextAccessor.HttpContext.Session.GetString("Reputation")</span>
                                    </small><br />
                                    <small>
                                        <i class="fas fa-coins me-1"></i><small>Cspr: </small> <span class="text-right">@httpContextAccessor.HttpContext.Session.GetString("Balance")</span>
                                    </small>
                                </div>

                                if (Program.chainQue.Count(x => x.Status == Helpers.Constants.Enums.ChainActionStatus.InProgress.ToString() && x.WalletAddress == httpContextAccessor.HttpContext.Session.GetString("WalletAddress")) > 0)
                                {
                                    <div class="d-inline-block" style="vertical-align: top;">
                                        <span class="spinner spinner-alt smallSpinner"><i class="fas fa-circle-notch fa-link"></i></span>
                                    </div>
                                }
                            }
                        </div>
                        <div class="dropdown-menu dropdown-menu-end dropdown-menu-lg dropdown-big mt-1">

                            <div>

                                @if (httpContextAccessor.HttpContext.Session.GetInt32("ChainSign") > 0 && Program._settings.DaoBlockchain != null)
                                {
                                    <div class="dropdown-header py-2"><strong>Pending blockchain actions: @Program.chainQue.Count(x=> x.Status == Helpers.Constants.Enums.ChainActionStatus.InProgress.ToString() && x.WalletAddress == httpContextAccessor.HttpContext.Session.GetString("WalletAddress"))</strong></div>
                                    <div class="dropdown-header chainDropdown">
                                        @foreach (var item in Program.chainQue.Where(x => x.WalletAddress == httpContextAccessor.HttpContext.Session.GetString("WalletAddress")).OrderByDescending(x => x.CreateDate).Take(10))
                                        {
                                            <div class="chainQueItem" onclick="ShowChainActionDetail(@item.ChainActionId);">
                                                <div class="chainQueItemIcon">
                                                    @if (item.Status == "Completed")
                                                    {
                                                        <i class="fas fa-check-circle"></i>
                                                    }
                                                    else if (item.Status == "Failed" || item.Status.ToLower().Contains("error"))
                                                    {
                                                        <i class="fas fa-exclamation-triangle"></i>
                                                    }
                                                    else if (item.Status == "In Progress")
                                                    {
                                                        <i class="fas fa-circle-notch fa-spin"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-hourglass"></i>
                                                    }
                                                </div>
                                                <div class="d-inline-block w-100 pe-4">
                                                    <div class="ms-1">@item.ActionType <small class="float-right">Deploy Time</small></div>
                                                    <small class="ms-1" style="opacity:0.5">@item.Status</small><small class="float-right" style="opacity:0.5">@item.CreateDate.ToString("MM.dd.yyyy HH:mm")</small>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="dropdown-header py-2"><strong>Pending blockchain actions: 0</strong></div>
                                    <div class="dropdown-header">
                                        <i>Please connect your wallet to use onchain features.</i>
                                    </div>
                                }

                                <a class="dropdown-item text-right" href="../Public/Logout">
                                    <i class="fas fa-power-off"></i> Logout
                                </a>
                            </div>

                        </div>
                    </li>
                </ul>
            </div>
        </header>


        <div class="body flex-grow-1">
            <div class="container-lg">

                @RenderBody()

                <!-- Loading Spinner -->
                <div style="display:none" class="preloader preloader-alt no-split">
                    <span class="spinner spinner-alt"><img class="spinner-brand" src="../Public/images/crdao-newlogo-light.png" alt=""></span>
                    <div id="loaderExplanation"></div>
                </div>
            </div>
        </div>


        <footer class="footer">
            <div><a href="#">Services DAO</a> © @DateTime.Now.Year</div>
            <div class="ms-auto">Powered by&nbsp;<a href="#">Services DAO</a></div>
        </footer>
    </div>

    <!-- Modal DOS Fee -->
    <div class="modal" tabindex="-1" role="dialog" id="DosFeeModal" data-target="#DosFeeModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">DoS Fee Payment</h5>
                </div>
                <div class="modal-body">
                    <p>Please pay DOS fee</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="PayDosFee();">Make Payment</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Modal Login -->
    <div class="modal fade" id="modal-login">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>Sign In Required</b></h5>
                </div>

                <div class="modal-body" id="logindiv">

                    <h6>
                        <span class="tc-default">Sign in with your CRDAO account to access off-chain features</span>
                    </h6>
                    <div id="loginForm" class="my-3">
                        @Html.AntiForgeryToken()

                        <input type="text" id="email" class="form-control mb-2" placeholder="Email or username">

                        <input type="password" id="pass" class="form-control mb-3" placeholder="Password">


                        <div>
                            <div class="forget-link fz-6">
                                <a class="cursorp fp float-right forgotPass">@Lang.Login_ForgotPassword</a>
                            </div>
                        </div>

                        <button type="button" onclick="Login();"
                                class="btn btn-primary btn-block btn-md submitFormButton mt-3 w-100">
                            Sign In
                        </button>
                    </div>

                    <div class="input-group inpcapthca mt-2 captchaDiv d-none">
                        <div class="input-group-prepend">
                            <img id="img-captcha-login" src="../get-captcha-image?code=securityCodeLogin"
                                 style="width: 120px; height: 40px;" />
                        </div>
                        <input oninput="this.value = this.value.toUpperCase()" autocomplete="off" type="text"
                               name="code2" class="form-control frmcapthca" id="securityCodeLogin"
                               placeholder="@Lang.SecureNote" maxlength="5" style="margin-left: 10px; height:40px;" />
                    </div>

                    <div class="text-center mt-5 mb-2">
                        Don’t have an account? <a class="cursorp signUp fp"> <strong>Sign up here</strong></a>
                    </div>


                </div>
            </div>
        </div>
    </div>

    <!-- Modal Sign Up -->
    <div class="modal fade" id="modal-signUp">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>Sign Up</b></h5>
                </div>
                <div class="modal-body">

                    <h5 class="mb-3"><small class="tc-default">Create new CRDAO account</small></h5>
                    <div id="registerForm">
                        @Html.AntiForgeryToken()
                        <div class="field-item mb-2">
                            <div class="field-wrap">
                                <input type="text" id="nameregister" class="form-control" placeholder="Your Name">
                            </div>
                        </div>
                        <div class="field-item mb-2">
                            <div class="field-wrap">
                                <input type="text" id="emailregister" class="form-control" placeholder="Your Email">
                            </div>
                        </div>
                        <div class="field-item mb-2">
                            <div class="field-wrap">
                                <input type="text" id="usernameregister" class="form-control"
                                       placeholder="Your User Name">
                            </div>
                        </div>
                        <div class="field-item mb-2">
                            <div class="field-wrap">
                                <input type="password" id="passregister" class="form-control" placeholder="Password">
                            </div>
                        </div>
                        <div class="field-item mb-3">
                            <div class="field-wrap">
                                <input type="password" id="passregister2" class="form-control"
                                       placeholder="Repeat Password">
                            </div>
                        </div>

                        <!-- Legal Check -->
                        <div class="field-item">
                            <div class="form-check d-flex align-items-center text-center">
                                <input type="checkbox" class="form-check-input mt-0 mr-3" id="chcTerms">
                                <label class="form-check-label small ps-2"
                                       for="exampleCheck1">@Html.Raw(Lang.Login_AggreeTerms)</label>
                            </div>
                        </div>
                        <!-- Captcha -->
                        <div class="input-group inpcapthca mt-2 captchaDiv d-none">
                            <div class="input-group-prepend">
                                <img id="img-captcha-register" src="../get-captcha-image?code=securityCodeRegister"
                                     style="width: 120px; height: 40px;" />
                            </div>
                            <input oninput="this.value = this.value.toUpperCase()" autocomplete="off" type="text"
                                   name="code2" class="form-control frmcapthca" id="securityCodeRegister"
                                   @*placeholder="@Lang.SecureNote"*@ maxlength="5"
                                   style="margin-left: 10px; height:40px;" />
                        </div>

                        <button type="button" onclick="Register();"
                                class="btn btn-primary btn-block btn-md submitFormButton mt-3 w-100">
                            Sign
                            Up
                        </button>

                        <div class="text-center mt-5 mb-2">
                            Do you have an account? <a class="cursorp signIn fp"> <strong>Sign in here</strong></a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <!-- Modal Forgot Pass -->
    <div class="modal fade" id="modal-forgotpass">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>Forgot Password</b></h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <h5><small class="tc-default">Get password reset link to your registered email</small></h5>
                        <div class="login-signup-form" id="forgotPassForm">
                            @Html.AntiForgeryToken()
                            <div class="field-item">
                                <div class="field-wrap">
                                    <input type="text" id="emailforgot" class="form-control"
                                           placeholder="Registered email">
                                </div>
                            </div>

                            <!-- Captcha -->
                            <div class="input-group inpcapthca mt-2 captchaDiv d-none">
                                <div class="input-group-prepend">
                                    <img id="img-captcha-resetpass"
                                         src="../get-captcha-image?code=securityCodeResetPass"
                                         style="width: 120px; height: 40px;" />
                                </div>
                                <input oninput="this.value = this.value.toUpperCase()" autocomplete="off" type="text"
                                       name="code2" class="form-control frmcapthca" id="securityCodeResetPass"
                                       placeholder="@Lang.SecureNote" maxlength="5"
                                       style="margin-left: 10px; height:40px;" />
                            </div>

                            <div style="width: 100%;height: 50px;">
                                <button type="button" onclick="ResetPassword();"
                                        class="btn btn-primary btn-block btn-md float-right submitFormButton mt-3 2-100"
                                        style="width: 100%;">
                                    Reset Password
                                </button>
                            </div>



                            <div class="text-center mt-5 mb-2">
                                Remembered your password ? <a class="cursorp signIn fp">
                                    <strong>
                                        Sign in
                                        here
                                    </strong>
                                </a>
                            </div>
                        </div>


                        <!--<div class="card-footer bg-transparent border-top px-md-5">-->
                        @*<a href="#" class="small" onclick="OpenSection('login')"> Open Section</a>*@
                        <!--</div>-->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Wallet Change Detected Modal -->
    <!-- If user connected a different wallet for the user -->
    <div class="modal fade" id="modal-walletchange">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>Wallet Change Detected</b></h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <h5 class="mb-3">
                            <small class="tc-default">
                                You connected a different wallet for this user. Do you want to set
                                current wallet address as your default wallet for your profile ?
                            </small>
                        </h5>

                        <div class="col-md-6">
                            <input class="btn btn-success w-100 text-white mr-3" type="button" onclick="ChangeUserWallet(1)" value="YES" />
                        </div>
                        <div class="col-md-6">
                            <input class="btn btn-danger w-100 text-white" type="button" onclick="ChangeUserWallet(-1)" value="NO" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/Home/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/Home/js/coreui.bundle.min.js"></script>
    <script src="~/Home/lib/chartjs/js/coreui-chartjs.js"></script>
    <script src="~/Home/lib/chartjs/js/chart.min.js"></script>
    <script src="~/Home/lib/chartjs/js/coreui-utils.js"></script>
    <script src="~/Home/lib/toastr/toastr.js"></script>
    <script src="~/Home/lib/jquery-confirm/jquery-confirm.js"></script>
    <script src="~/Home/js/sorttable.js"></script>
    <script src="~/Home/lib/ckeditor/ckeditor.js"></script>
    <script src="~/Home/js/daofunctions.js?v=1.0.6"></script>
    <partial name="../Shared/_SharedFunctionsPartial.cshtml" />

    <script>
        $(document).ready(function () {

            $('[data-toggle="tooltip"]').tooltip();

            //Display forget pass modal event
            $(".forgotPass").on("click", function () {
                $("#modal-login").modal("toggle");

                setTimeout(function () {
                    $("#modal-forgotpass").modal({ show: false, backdrop: 'static' });
                    $("#modal-forgotpass").modal("show");
                }, 500);
            })

            //Display sign up modal event
            $(".signIn").on("click", function () {
                $("#modal-forgotpass").modal("hide");
                $("#modal-signUp").modal("hide");

                setTimeout(function () {
                    $("#modal-login").modal({ show: false, backdrop: 'static' });
                    $("#modal-login").modal("show");
                }, 500);
            })

            //Display sign up modal event
            $(".signUp").on("click", function () {
                $("#modal-login").modal("toggle");
                setTimeout(function () {
                    $("#modal-signUp").modal({ show: false, backdrop: 'static' });
                    $("#modal-signUp").modal("show");
                }, 500);
            })

            //Dark theme toggle check
            if (document.body.classList.contains('dark-theme')) {
                var element = document.getElementById('btn-dark-theme');
                if (typeof (element) != 'undefined' && element != null) {
                    document.getElementById('btn-dark-theme').checked = true;
                }
                $('html').addClass('htmlScroll');
            }
            else {
                var element = document.getElementById('btn-light-theme');
                if (typeof (element) != 'undefined' && element != null) {
                    document.getElementById('btn-light-theme').checked = true;
                }
                $('html').removeClass('htmlScroll');
            }

            //Display toastr message from server side
            var toastrMessage = '@TempData["toastr-message"]';
            var toastrType = '@TempData["toastr-type"]';

            if (toastrMessage.length > 0) {
                if (toastrType == "warning") {
                    toastr.warning(toastrMessage);
                }
                else if (toastrType == "error") {
                    toastr.error(toastrMessage);
                }
                else if (toastrType == "success") {
                    toastr.success(toastrMessage);
                }
            }

            $('.link-load').click(function () {
                ShowLoader();
            });

            //Display traditional signin popup if required
            var dbSignRequired = '@TempData["DbSignRequired"]';
            if (dbSignRequired == "true") {
                OpenSignInModal();
            }

            DetectUserWalletChange();

            const CasperWalletProvider = window.CasperWalletProvider;
            const CasperWalletEventTypes = window.CasperWalletEventTypes;

            if (CasperWalletProvider && CasperWalletEventTypes) {
                const handleWalletChange = (event) => {
                    try {
                        const state = JSON.parse(event.detail);
                        if ('@httpContextAccessor.HttpContext.Session.GetInt32("ChainSign")' == 1) {
                            var publicAddress = state.activeKey;

                            if ('@httpContextAccessor.HttpContext.Session.GetString("WalletAddress")' != publicAddress && @httpContextAccessor.HttpContext.Session.GetInt32("UserID") != 0) {
                                $("#modal-walletchange").modal({ show: false, backdrop: 'static' });
                                $("#modal-walletchange").modal("show");
                            }
                        }
                    } catch (err) {
                        handleError(err);
                    }
                };

                window.addEventListener(CasperWalletEventTypes.ActiveKeyChanged, handleWalletChange);
            }

        });

        document.querySelectorAll('[data-coreui-toggle="popover"]').forEach(element => {
            // eslint-disable-next-line no-new
            new coreui.Popover(element);
        });


        async function DetectUserWalletChange() {
            //Display wallet change message if user connected with a different wallet
            if ('@httpContextAccessor.HttpContext.Session.GetInt32("ChainSign")' == 1) {
                var publicAddress = await window.casperlabsHelper.getActivePublicKey();

                if ('@httpContextAccessor.HttpContext.Session.GetString("WalletAddress")' != publicAddress && @httpContextAccessor.HttpContext.Session.GetInt32("UserID") != 0) {
                    $("#modal-walletchange").modal({ show: false, backdrop: 'static' });
                    $("#modal-walletchange").modal("show");
                }
            }
        }

        function handleThemeChange(src) {
            var event = document.createEvent('Event');
            event.initEvent('themeChange', true, true);

            if (src === 'light-theme') {
                document.body.classList.remove('dark-theme');
                $('html').removeClass('htmlScroll');
            }
            if (src === 'dark-theme') {
                document.body.classList.add('dark-theme');
                $('html').addClass('htmlScroll');
            }
            document.body.dispatchEvent(event);
            changeThemeCookie(src);

        }

        function changeThemeCookie(src) {
            $.ajax({ type: "GET", url: './Home/SetCookie', data: { "src": src }, cache: false, async: true });
        }

        //Displays traditional sign in popup
        function OpenSignInModal() {
            $("#modal-login").modal({ show: false, backdrop: 'static' });
            $("#modal-login").modal("show");
        }
    </script>

    @RenderSection("Scripts", required: false)
</body>

</html>
